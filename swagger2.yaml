openapi: 3.0.3
info:
  title: Hotel Booking API
  description: |
    # –ü–æ—Ä—è–¥–æ–∫ —Ä–∞–±–æ—Ç—ã —Å API

    1. **–°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ** —á–µ—Ä–µ–∑ POST /tasks/init-mock-data
    2. **–ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID** —á–µ—Ä–µ–∑ GET /hotels/, GET /users/, etc.
    3. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ ID** –¥–ª—è CRUD –æ–ø–µ—Ä–∞—Ü–∏–π

    –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ API –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π —Å RabbitMQ, Redis –∏ Celery
  version: 2.2.0
  contact:
    name: API Support
    email: support@hotelbooking.com

servers:
  - url: http://localhost:80/api/v1
    description: Development server

tags:
  - name: tasks
    description: –§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã (–Ω–∞—á–Ω–∏—Ç–µ –∑–¥–µ—Å—å!)
  - name: hotels
    description: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ—Ç–µ–ª—è–º–∏
  - name: rooms
    description: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–æ–º–Ω–∞—Ç–∞–º–∏
  - name: users
    description: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
  - name: bookings
    description: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏
  - name: general
    description: –û–±—â–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã

paths:
  /:
    get:
      summary: –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç API
      description: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ API —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º /api/v1
      tags: [general]
      responses:
        '200':
          description: API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hotel Booking API is running!"
                  version:
                    type: string
                    example: "2.2.0"
                  status:
                    type: string
                    example: "healthy"
                  docs:
                    type: string
                    example: "/api/v1/docs"
                  health:
                    type: string
                    example: "/api/v1/health"

  /health:
    get:
      summary: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
      description: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö, Redis, RabbitMQ)
      tags: [general]
      responses:
        '200':
          description: –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  services:
                    type: object
                    properties:
                      api:
                        type: string
                      database:
                        type: string
                      rabbitmq:
                        type: string
                      redis:
                        type: string
                  timestamp:
                    type: string
                    format: date-time

  /tasks/init-mock-data:
    post:
      summary: üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ù–ê–ß–ù–ò–¢–ï –ó–î–ï–°–¨!)
      description: |
        **–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–≤—ã–π —à–∞–≥!** –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - 3 –æ—Ç–µ–ª—è, –∫–æ–º–Ω–∞—Ç—ã, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        
        –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤.
      tags: [tasks]
      responses:
        '200':
          description: –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          examples:
            success:
              summary: –î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã
              value:
                message: "–ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É."
        '500':
          description: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /hotels/:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π
      description: |
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≥–æ—Ä–æ–¥—É –∏ —Å—Ç—Ä–∞–Ω–µ.
        
        **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö ID –æ—Ç–µ–ª–µ–π** –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
      tags: [hotels]
      parameters:
        - name: skip
          in: query
          description: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: limit
          in: query
          description: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
        - name: city
          in: query
          description: –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É
          required: false
          schema:
            type: string
            example: "–ú–æ—Å–∫–≤–∞"
        - name: country
          in: query
          description: –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç—Ä–∞–Ω–µ
          required: false
          schema:
            type: string
            example: "–†–æ—Å—Å–∏—è"
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotelRead'
          examples:
            hotelsList:
              summary: –°–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π
              value:
                - id: 1
                  name: "Grand Hotel Moscow"
                  description: "–†–æ—Å–∫–æ—à–Ω—ã–π –æ—Ç–µ–ª—å –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã"
                  address: "—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 1"
                  city: "–ú–æ—Å–∫–≤–∞"
                  country: "–†–æ—Å—Å–∏—è"
                  rating: 4.8
                  created_at: "2024-01-01T00:00:00"
                - id: 2
                  name: "St. Petersburg Imperial"
                  description: "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –æ—Ç–µ–ª—å –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ"
                  address: "–ù–µ–≤—Å–∫–∏–π –ø—Ä-—Ç, 25"
                  city: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
                  country: "–†–æ—Å—Å–∏—è"
                  rating: 4.6
                  created_at: "2024-01-01T00:00:00"
        '500':
          description: –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç–µ–ª—å
      description: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –æ—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
      tags: [hotels]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelCreate'
            examples:
              newHotel:
                summary: –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–µ–ª—è
                value:
                  name: "–ù–æ–≤—ã–π –û—Ç–µ–ª—å"
                  description: "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ—Ç–µ–ª—è"
                  address: "—É–ª. –ù–æ–≤–∞—è, 123"
                  city: "–ú–æ—Å–∫–≤–∞"
                  country: "–†–æ—Å—Å–∏—è"
                  rating: 4.5
      responses:
        '200':
          description: –û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelRead'
        '400':
          description: –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–µ–ª—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /hotels/{hotel_id}:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–µ–ª—å –ø–æ ID
      description: |
        –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–µ–ª–µ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
        
        **–í–Ω–∏–º–∞–Ω–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –æ—Ç–µ–ª–µ–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ GET /hotels/
      tags: [hotels]
      parameters:
        - name: hotel_id
          in: path
          required: true
          description: ID –æ—Ç–µ–ª—è (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID 1, 2, 3 –∏ —Ç.–¥.)
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–µ–ª–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelRead'
          examples:
            hotelFound:
              summary: –û—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
              value:
                id: 1
                name: "Grand Hotel Moscow"
                description: "–†–æ—Å–∫–æ—à–Ω—ã–π –æ—Ç–µ–ª—å –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã"
                address: "—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, 1"
                city: "–ú–æ—Å–∫–≤–∞"
                country: "–†–æ—Å—Å–∏—è"
                rating: 4.8
                created_at: "2024-01-01T00:00:00"
        '404':
          description: –û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          examples:
            hotelNotFound:
              summary: –û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
              value:
                detail: "–û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"

    put:
      summary: –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–µ–ª–µ
      description: –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–µ–ª–µ
      tags: [hotels]
      parameters:
        - name: hotel_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelUpdate'
            examples:
              updateHotel:
                summary: –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–µ–ª—è
                value:
                  name: "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è"
                  rating: 4.9
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–µ–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelRead'
        '404':
          description: –û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: –£–¥–∞–ª–∏—Ç—å –æ—Ç–µ–ª—å
      description: –£–¥–∞–ª–∏—Ç—å –æ—Ç–µ–ª—å –∏–∑ —Å–∏—Å—Ç–µ–º—ã
      tags: [hotels]
      parameters:
        - name: hotel_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        '200':
          description: –û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          examples:
            hotelDeleted:
              summary: –û—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω
              value:
                message: "–û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
        '404':
          description: –û—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: –ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –æ—Ç–µ–ª—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∫–æ–º–Ω–∞—Ç–∞–º–∏
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –æ—Å—Ç–∞—é—Ç—Å—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö ID

  /users/:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      description: |
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
        
        **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π** –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
      tags: [users]
      parameters:
        - name: skip
          in: query
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRead'
          examples:
            usersList:
              summary: –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              value:
                - id: 1
                  email: "ivan.petrov@example.com"
                  first_name: "–ò–≤–∞–Ω"
                  last_name: "–ü–µ—Ç—Ä–æ–≤"
                  phone: "+79991234567"
                  created_at: "2024-01-01T00:00:00"
                - id: 2
                  email: "maria.ivanova@example.com"
                  first_name: "–ú–∞—Ä–∏—è"
                  last_name: "–ò–≤–∞–Ω–æ–≤–∞"
                  phone: "+79992345678"
                  created_at: "2024-01-01T00:00:00"

  /users/{user_id}:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
      description: |
        –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
        
        **–í–Ω–∏–º–∞–Ω–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ GET /users/
      tags: [users]
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            example: 1
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRead'
        '404':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ... –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è rooms –∏ bookings

  /tasks/send-booking-confirmation:
    post:
      summary: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      description: –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      tags: [tasks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTaskData'
            examples:
              bookingConfirmation:
                summary: –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                value:
                  to_email: "user@example.com"
                  user_name: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  booking_data:
                    booking_reference: "ABC123"
                    hotel_name: "Grand Hotel"
                    room_number: "101"
                    check_in_date: "2024-01-01"
                    check_out_date: "2024-01-05"
                    total_price: 15000
                    number_of_guests: 2
      responses:
        '200':
          description: –ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '500':
          description: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥—å
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã tasks

components:
  schemas:
    MessageResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
      example:
        message: "–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"

    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
      required:
        - detail
      example:
        detail: "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"

    # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ö–µ–º—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

  parameters:
    HotelIdPath:
      name: hotel_id
      in: path
      required: true
      description: ID –æ—Ç–µ–ª—è (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∏–∑ GET /hotels/)
      schema:
        type: integer
        minimum: 1
        example: 1

    UserIdPath:
      name: user_id
      in: path
      required: true
      description: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∏–∑ GET /users/)
      schema:
        type: integer
        minimum: 1
        example: 1

    RoomIdPath:
      name: room_id
      in: path
      required: true
      description: ID –∫–æ–º–Ω–∞—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∏–∑ GET /rooms/)
      schema:
        type: integer
        minimum: 1
        example: 1

    BookingIdPath:
      name: booking_id
      in: path
      required: true
      description: ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ ID –∏–∑ GET /bookings/)
      schema:
        type: integer
        minimum: 1
        example: 1