services:
  nginx:
    build: ./nginx
    container_name: hotel-booking-nginx
    ports:
      - "80:80"      
    depends_on:
      - hotel-booking-api
      - hotel-booking-frontend
    networks:
      - hotel-booking-network

  redis:
    image: redis:6.2-alpine
    container_name: hotel-booking-redis
    ports:
      - "6379:6379"
    command: redis-server --bind 0.0.0.0 --protected-mode no
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
    - hotel-booking-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: hotel-booking-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"  
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - hotel-booking-network

  hotel-booking-api:
    build: .
    container_name: hotel-booking-api
    environment:
      - DATABASE_URL=postgresql://postgres:HWme072481@postgres:5432/hotel_booking
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - hotel-data:/app/data
    depends_on:
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 10s
      retries: 3
    networks:
      - hotel-booking-network

  hotel-booking-frontend:
    image: nginx:alpine
    container_name: hotel-booking-frontend
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - hotel-booking-api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - hotel-booking-network

  init-db:
    build: .
    container_name: hotel-booking-init-db
    environment:
      - DATABASE_URL=postgresql://postgres:HWme072481@postgres:5432/hotel_booking
      - PYTHONPATH=/app
    volumes:
      - hotel-data:/app/data
    command: ["python", "app/create_mock_data.py"]
    networks:
      - hotel-booking-network
    depends_on:
      - hotel-booking-api

  postgres:
    image: postgres:15-alpine
    container_name: hotel-booking-postgres
    environment:
      - POSTGRES_DB=hotel_booking
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=HWme072481
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - hotel-booking-network

volumes:
  hotel-data:
  postgres-data:

networks:
  hotel-booking-network:
    driver: bridge